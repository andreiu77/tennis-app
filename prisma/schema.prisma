generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String   // Hashed password
  role     Role     @default(USER)
  players  Player[] // One-to-many: a user can create many players
  logs     Log[]    // One-to-many: a user can have many log entries
  monitored  MonitoredUser?
}

model Player {
  id               Int         @id @default(autoincrement())
  name             String
  country          String
  date_of_birth    DateTime
  ranking          Int
  number_of_titles Int
  handedness       Handedness
  imageUrl         String
  racket_brand     String
  racket           Racket      @relation(fields: [racket_brand], references: [brand_name])
  createdAt        DateTime    @default(now())

  userId           Int?        // Player optionally belongs to a user
  user             User?       @relation(fields: [userId], references: [id])
}

model Racket {
  brand_name String   @id
  players    Player[] // One-to-many relation
}

model Log {
  id        Int        @id @default(autoincrement())
  userId    Int
  action    ActionType
  createdAt DateTime   @default(now())

  user      User       @relation(fields: [userId], references: [id])
}

model MonitoredUser {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

enum Handedness {
  left_handed
  right_handed
}

enum Role {
  USER
  ADMIN
}

enum ActionType {
  ADD
  UPDATE
  DELETE
}
